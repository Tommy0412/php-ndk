name: Build PHP NDK Artifacts

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a]
        target: [armv7a-linux-androideabi32, aarch64-linux-android]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build PHP & SQLite for ${{ matrix.abi }}
        run: |
          docker build \
            --build-arg TARGET=${{ matrix.target }} \
            --tag php-ndk-builder:${{ matrix.abi }} .

      - name: Extract Binaries & Headers
        run: |
          mkdir -p release-package/${{ matrix.abi }}
          CONTAINER_ID=$(docker create php-ndk-builder:${{ matrix.abi }})
          
          # Copy .so files
          docker cp $CONTAINER_ID:/root/build/install/php.so ./release-package/${{ matrix.abi }}/
          docker cp $CONTAINER_ID:/root/build/install/libsqlite3.so ./release-package/${{ matrix.abi }}/

          # Copy headers only once (for first ABI)
          if [ "${{ matrix.abi }}" == "armeabi-v7a" ]; then
            mkdir -p release-package/include
            docker cp $CONTAINER_ID:/root/build/install/php-headers/. ./release-package/include/php
          fi

          docker rm $CONTAINER_ID

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-ndk-artifacts-${{ matrix.abi }}
          path: release-package/${{ matrix.abi }}

name: Build and Release PHP 8.4.2 for arm64-v8a

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '**.patch'
      - '.github/workflows/**'

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - abi: "arm64-v8a"
            target: "aarch64-linux-android"
            api: "28"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- Build Stage ---
      - name: Build PHP 8.4.2 for ${{ matrix.architecture.abi }}
        id: build-docker-target
        run: |
          docker build \
            --tag php-ndk-builder:${{ matrix.architecture.abi }} \
            --build-arg TARGET="${{ matrix.architecture.target }}" \
            --build-arg API="${{ matrix.architecture.api }}" \
            .

      # --- Package Stage ---
      - name: Create Artifact Directory
        run: |
          mkdir -p release-package/binaries/${{ matrix.architecture.abi }}
          mkdir -p release-package/includes/php

      - name: Extract Compiled Binaries and Headers
        run: |
          CONTAINER_ID=$(docker create php-ndk-builder:${{ matrix.architecture.abi }})

          # Copy all .so files from /artifacts (they come from /root/install)
          docker cp $CONTAINER_ID:/artifacts/. ./release-package/binaries/${{ matrix.architecture.abi }}/ || \
          echo "Warning: Could not find /artifacts"

          # Copy PHP headers
          docker cp $CONTAINER_ID:/artifacts/headers/php/. ./release-package/includes/php/ || \
          echo "Warning: Could not find /artifacts/headers/php"

          docker rm $CONTAINER_ID

      - name: Verify Artifacts
        run: |
          echo "=== Checking extracted .so files ==="
          find release-package/binaries/${{ matrix.architecture.abi }}/ -type f -name "*.so"
          echo "=== Checking header files ==="
          find release-package/includes/ -name "*.h" | head -10

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-ndk-artifacts-${{ matrix.architecture.abi }}
          path: release-package/
          if-no-files-found: error

  # --- Final Release Stage ---
  release:
    needs: build_and_package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Prepare Final Release Structure
        run: |
          mkdir -p php-ndk-artifacts/lib/arm64-v8a
          mkdir -p php-ndk-artifacts/includes/php

          # Copy all shared libs (.so)
          find downloaded-artifacts -type f -name "*.so" -exec cp {} php-ndk-artifacts/lib/arm64-v8a/ \; || \
          echo "Warning: No shared libraries found"

          # Copy PHP headers
          find downloaded-artifacts -type f -name "*.h" -exec cp --parents {} php-ndk-artifacts/includes/php/ \; || \
          echo "Warning: No headers found"

      - name: Verify Final Artifacts
        run: |
          echo "=== Final artifact structure ==="
          tree php-ndk-artifacts/ || ls -la php-ndk-artifacts/
          echo "=== Library verification ==="
          file php-ndk-artifacts/lib/arm64-v8a/*.so || echo "No libraries found"
          echo "=== Header verification ==="
          find php-ndk-artifacts/includes/ -name "*.h" | head -5

      - name: Create ZIP Release Asset
        run: |
          zip -r php-ndk-artifacts.zip php-ndk-artifacts/

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: php-ndk-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build Artifact and Release ZIP

on:
  push:
    branches: 
      - master
      - main
  create:
    tags:
      - 'v*.*.*'

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for uploading the release asset
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # ----------------------------------------------------
    # FIX: Create the full directory structure required for docker cp
    # ----------------------------------------------------
    - name: Create Artifact Directory
      run: mkdir -p release-package/binaries release-package/includes

    # ----------------------------------------------------
    # 1. BUILD THE DOCKERFILE (targeting the 'buildsystem' stage)
    # This step only builds the image; it does not load it or push it.
    # ----------------------------------------------------
    - name: Build 'buildsystem' stage only
      # We tag the image for easy referencing
      run: |
        docker build -t php-ndk-builder:latest --target buildsystem .

    # ----------------------------------------------------
    # 2. EXTRACT ARTIFACTS from the built image
    # We create a temporary container and copy the files out.
    # ----------------------------------------------------
    - name: Extract Compiled Binaries and Headers
      run: |
        # a. Create a temporary container from the builder image
        CONTAINER_ID=$(docker create php-ndk-builder:latest)
        
        # b. Copy the compiled binaries to the runner's workspace
        # We copy the contents of /root/install to the pre-made folder 'binaries'
        docker cp $CONTAINER_ID:/root/install/. ./release-package/binaries/
        
        # c. Copy the required headers (PHP source)
        # We copy the entire php source tree to the pre-made folder 'includes'
        docker cp $CONTAINER_ID:/root/php-8.4.2 ./release-package/includes/php
        
        # d. Remove the temporary container
        docker rm $CONTAINER_ID

    # ----------------------------------------------------
    # 3. ZIP AND UPLOAD (Conditional on Tag)
    # ----------------------------------------------------
    - name: Archive and Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Ensure the 'zip' utility is available (it usually is on ubuntu-latest)
        # However, it's safer to ensure it's installed if it fails.
        # sudo apt-get install -y zip # (Omitted, assuming 'zip' is installed)
        
        # Create a clean ZIP file for release
        zip -r php-ndk-artifacts.zip release-package
      
    - name: Upload Release Asset
      id: upload-asset 
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: php-ndk-artifacts.zip 
        body: |
          Cross-compiled PHP 8.4.2 and SQLite 3 for Android NDK.
          
          Contents:
          - binaries/php.so (Compiled PHP SAPI)
          - binaries/libsqlite3.so (Compiled SQLite library)
          - includes/php/ (Full PHP source tree and headers for linking)
        overwrite: true

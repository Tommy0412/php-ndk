name: Build and Release NDK Artifacts

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '**.patch'
      - '.github/workflows/**'

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - abi: "arm64-v8a"
            target: "aarch64-linux-android"
            api: "28"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build \
            --tag php-ndk-builder:${{ matrix.architecture.abi }} \
            --build-arg TARGET="${{ matrix.architecture.target }}" \
            --build-arg API="${{ matrix.architecture.api }}" .

      - name: Extract Artifacts
        run: |
          mkdir -p release-package/binaries/${{ matrix.architecture.abi }}
          mkdir -p release-package/includes/php

          CONTAINER_ID=$(docker create php-ndk-builder:${{ matrix.architecture.abi }})

          # Copy from /artifacts (Dockerfile final stage puts everything there)
          docker cp $CONTAINER_ID:/artifacts/. ./release-package/binaries/${{ matrix.architecture.abi }}/

          docker rm $CONTAINER_ID

      - name: Verify Extracted Files
        run: |
          echo "=== Listing all .so and .h files ==="
          find release-package -type f \( -name "*.so" -o -name "*.h" \)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-ndk-artifacts-${{ matrix.architecture.abi }}
          path: release-package/**
          if-no-files-found: error

  release:
    needs: build_and_package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Prepare Final Release Structure
        run: |
          mkdir -p php-ndk-artifacts/lib/arm64-v8a
          mkdir -p php-ndk-artifacts/include/php

          # Copy all compiled libraries
          find downloaded-artifacts -type f -name "libphp.so" -exec cp {} php-ndk-artifacts/lib/arm64-v8a/ \;
          find downloaded-artifacts -type f -name "libsqlite3.so" -exec cp {} php-ndk-artifacts/lib/arm64-v8a/ \;
          find downloaded-artifacts -type f -name "libonig.so" -exec cp {} php-ndk-artifacts/lib/arm64-v8a/ \;
          find downloaded-artifacts -type f -name "libcurl.so" -exec cp {} php-ndk-artifacts/lib/arm64-v8a/ \;

          # Copy PHP headers
          find downloaded-artifacts -type d -name "php" -exec cp -r {}/. php-ndk-artifacts/include/php/ \;

      - name: Verify Final Artifacts
        run: |
          echo "=== Final structure ==="
          tree php-ndk-artifacts || ls -la php-ndk-artifacts
          echo "=== Shared libraries ==="
          find php-ndk-artifacts/lib -name "*.so"
          echo "=== PHP headers ==="
          find php-ndk-artifacts/include -name "*.h" | head -10

      - name: Create ZIP Release Asset
        run: zip -r php-ndk-artifacts.zip php-ndk-artifacts/

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: php-ndk-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

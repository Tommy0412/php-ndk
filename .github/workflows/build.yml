name: Build and Release NDK Artifacts

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_package:
    strategy:
      matrix:
        architecture:
          - abi: "armeabi-v7a"
            target: "armv7a-linux-androideabi"
            api: "32"
          - abi: "arm64-v8a"
            target: "aarch64-linux-android"
            api: "32"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build PHP/SQLite for ${{ matrix.architecture.abi }}
        run: |
          docker build \
            --target buildsystem \
            --build-arg TARGET=${{ matrix.architecture.target }} \
            --build-arg API_LEVEL=${{ matrix.architecture.api }} \
            --tag php-ndk-builder:${{ matrix.architecture.abi }} \
            .

      - name: Extract Binaries and Headers
        run: |
          mkdir -p release-package/binaries/${{ matrix.architecture.abi }}
          CONTAINER_ID=$(docker create php-ndk-builder:${{ matrix.architecture.abi }})
          docker cp $CONTAINER_ID:/root/build/install/. ./release-package/binaries/${{ matrix.architecture.abi }}
          docker rm $CONTAINER_ID
          # Only copy headers once (armeabi-v7a)
          if [ "${{ matrix.architecture.abi }}" == "armeabi-v7a" ]; then
            mkdir -p release-package/includes/php
            cp -r release-package/binaries/armeabi-v7a/php-headers/* release-package/includes/php/
          fi

      - name: Upload ABI Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-ndk-artifacts-${{ matrix.architecture.abi }}
          path: release-package/binaries/${{ matrix.architecture.abi }}
          if-no-files-found: ignore

  release:
    needs: build_and_package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download all ABI artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-package/binaries

      - name: Prepare Final Artifacts
        run: |
          mkdir -p ./php-ndk-artifacts/lib/armeabi-v7a
          mkdir -p ./php-ndk-artifacts/lib/arm64-v8a
          mkdir -p ./php-ndk-artifacts/include/php

          # Move binaries to final lib folders
          mv ./release-package/binaries/armeabi-v7a/* ./php-ndk-artifacts/lib/armeabi-v7a/
          mv ./release-package/binaries/arm64-v8a/* ./php-ndk-artifacts/lib/arm64-v8a/

          # Rename php.so to libphp_sapi.so
          mv ./php-ndk-artifacts/lib/armeabi-v7a/php.so ./php-ndk-artifacts/lib/armeabi-v7a/libphp_sapi.so
          mv ./php-ndk-artifacts/lib/arm64-v8a/php.so ./php-ndk-artifacts/lib/arm64-v8a/libphp_sapi.so

          # Copy headers (already extracted in build)
          cp -r ./release-package/includes/php/* ./php-ndk-artifacts/include/php/

      - name: Create ZIP Release Asset
        run: |
          zip -r php-ndk-artifacts.zip php-ndk-artifacts

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: php-ndk-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

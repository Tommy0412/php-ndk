name: Build and Release NDK Artifacts

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - abi: "arm64-v8a"
            target: "aarch64-linux-android32"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- Build Stage: Compiling for arm64 ---
      - name: Build PHP/SQLite for ${{ matrix.architecture.abi }}
        id: build-docker-target
        run: |
          docker build \
            --target buildsystem \
            --tag php-ndk-builder:${{ matrix.architecture.abi }} \
            --build-arg NDK_TARGET="${{ matrix.architecture.target }}" \
            .

      # --- Package Stage: Extracting Binaries and Headers ---
      - name: Create Artifact Directory
        id: create-dir
        run: |
          mkdir -p release-package/binaries/${{ matrix.architecture.abi }}
          mkdir -p release-package/includes/php

      - name: Extract Compiled Binaries and Headers
        id: extract
        run: |
          CONTAINER_ID=$(docker create php-ndk-builder:${{ matrix.architecture.abi }})
          docker cp $CONTAINER_ID:/root/install/. ./release-package/binaries/${{ matrix.architecture.abi }}
          docker cp $CONTAINER_ID:/root/php-8.4.2/. ./release-package/includes/php
          # Copy the generated build headers (including zend_config.h)
          docker cp $CONTAINER_ID:/root/build/. ./release-package/includes/php/build/
          docker rm $CONTAINER_ID

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: php-ndk-artifacts-${{ matrix.architecture.abi }}
          path: release-package/binaries/${{ matrix.architecture.abi }}
          if-no-files-found: ignore

  # --- Final Release Stage ---
  release:
    needs: build_and_package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download ABI artifact
        uses: actions/download-artifact@v4
        with:
          path: ./release-package/binaries

      - name: Prepare Final Directory Structure and Copy Headers
        run: |
          mkdir -p ./php-ndk-artifacts/lib/arm64-v8a
          mkdir -p ./php-ndk-artifacts/include

          # Extract headers one final time from builder image
          docker build --target buildsystem --tag header-extractor --build-arg NDK_TARGET="aarch64-linux-android32" .
          CONTAINER_ID=$(docker create header-extractor)
          docker cp $CONTAINER_ID:/root/php-8.4.2/. ./php-ndk-artifacts/include/php
          # Copy the generated build headers (including zend_config.h)
          docker cp $CONTAINER_ID:/root/build/. ./php-ndk-artifacts/include/php/build/
          docker rm $CONTAINER_ID

      - name: Move Binaries and Rename php.so
        run: |
          mv ./release-package/binaries/php-ndk-artifacts-arm64-v8a/* ./php-ndk-artifacts/lib/arm64-v8a/
          mv ./php-ndk-artifacts/lib/arm64-v8a/php.so ./php-ndk-artifacts/lib/arm64-v8a/libphp.so

      - name: Create ZIP Release Asset
        run: |
          zip -r php-ndk-artifacts.zip php-ndk-artifacts

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: php-ndk-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
